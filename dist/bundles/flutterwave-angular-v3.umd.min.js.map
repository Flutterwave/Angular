{"version":3,"file":"flutterwave-angular-v3.umd.min.js","sources":["~/flutterwave-angular-v3/src/app/modules/models.ts","~/flutterwave-angular-v3/src/app/modules/make-payment/make-payment.component.ts","~/flutterwave-angular-v3/src/app/modules/flutterwave.service.ts","~/flutterwave-angular-v3/src/app/modules/flutterwave.module.ts"],"sourcesContent":["\n\n/**\n * Payment data object\n * @typedef {Object}\n * @property public_key {String}\n * @property callbackContext {Object}  The context of the\n * component or service that has the callback method.\n * The value must always be 'this'.\n * Using any other value might lead to error.\n * @property tx_ref {String}\n * @property amount {Number}\n * @property currency {String}\n * @property payment_options {String}\n * @property payment_plan {String}\n * @property redirect_url {String}\n * @property meta {Object}\n * @property customer {Object}\n * @property customizations {Object}\n * @property callback {Function}\n * @property onclose {Function}\n */\n  class  InlinePaymentOptions  {\n  public_key: string;\n  callbackContext?: object;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  country?: string;\n  authorization?: object | string;\n  payment_options?: string;\n  payment_plan?: string | number;\n  subaccounts?: any;\n  integrity_hash?: any;\n  redirect_url?: string;\n  meta ?: any;\n  customer?: object;\n  customizations?: object;\n  callback?: (response: object) => void;\n  onclose?: () => void;\n}\n\n\n/**\n * Async Payment data object\n * @typedef {Object}\n * @property public_key {String}\n * @property tx_ref {String}\n * @property amount {Number}\n * @property currency {String}\n * @property payment_options {String}\n * @property meta {Object}\n * @property customer {Object}\n * @property customizations {Object}\n * @property payment_plan {String}\n */\nclass  AsyncPaymentOptions {\n  public_key: string;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  country?: string;\n  authorization?: object | string;\n  payment_options?: string;\n  meta ?: any;\n  customer?: object;\n  customizations?: object;\n  payment_plan?: string | number;\n  subaccounts?: any;\n  integrity_hash?: any;\n}\n\n\ndeclare function  FlutterwaveCheckout(any)\n\n/**\n * Payment Response\n * @typedef {Object}\n * @property amount {String}\n * @property currency {Number}\n * @property customer {Object}\n * @property flw_ref {String}\n * @property status {String}\n * @property transaction_id {String}\n * @property tx_ref {String}\n * @property payment_plan {String}\n */\n class  PaymentSuccessResponse {\n    amount?: number;\n    currency?: string;\n    customer?: object;\n    flw_ref?: string;\n    status?: string;\n    transaction_id?: number;\n    tx_ref?: string;\n    payment_plan?: string|  number\n  }\n\n\n  export {\n    InlinePaymentOptions,\n    AsyncPaymentOptions,\n    FlutterwaveCheckout,\n    PaymentSuccessResponse\n  }\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from '../models';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'flutterwave-make-payment',\n  template: `\n    <button\n      style=\"{{style}}\"\n      [ngClass]=\"className ? className : 'flutterwave-pay-button' \"\n      (click)=\"makePayment()\">\n      {{text || 'Pay'}}\n    </button>\n  `,\n  styles: [`\n    .flutterwave-pay-button{\n      background-color: #f5a623;\n      border-radius: 4px;\n      border-color: #f5a623;\n      -webkit-box-shadow: 0 2px 3px 0 #ccc;\n              box-shadow: 0 2px 3px 0 #ccc;\n      color: #fff;\n      display: block;\n      font-size: 12px;\n      font-weight: 700;\n      padding: 14px 22px;\n      text-align: center;\n      text-decoration: none;\n      -webkit-transition: all .3s ease-in-out;\n      transition: all .3s ease-in-out;\n\n    }\n  `]\n})\nexport class MakePaymentComponent implements OnInit {\n\n  @Input() public_key: string;\n  @Input() tx_ref: string;\n  @Input() amount: number;\n  @Input() currency: string;\n  @Input() payment_options: string;\n  @Input() payment_plan: string | number;\n  @Input() subaccounts: any;\n  @Input() integrity_hash: any;\n  @Input() redirect_url: string;\n  @Input() meta: object; // { counsumer_id, consumer_mac}\n  @Input() customer: object; // {email, phone_number,name}\n  @Output() callback: EventEmitter<PaymentSuccessResponse> = new EventEmitter<PaymentSuccessResponse>();\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  @Input() customizations: object; // {title, description, logo}\n  @Input() text: string;\n  @Input() style: any;\n  @Input() className: string;\n  @Input() data: InlinePaymentOptions;\n\n  private inlinePaymentOptions: InlinePaymentOptions;\n\n  customer_defaults = {\n    email: '',\n    phone_number: '',\n    name: '',\n  };\n  meta_defaults = {\n    consumer_id: '',\n    consumer_mac: '',\n  };\n  customizations_defaults = {\n    title: '',\n    description: '',\n    logo: '',\n  };\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  makePayment() {\n\n    this.prepareForPayment();\n    FlutterwaveCheckout(this.inlinePaymentOptions);\n\n  }\n\n  prepareForPayment(): void {\n\n    this.customer = this.customer || {};\n    this.meta = this.meta || {};\n    this.customizations = this.customizations || {};\n\n    if ( this.data ) {\n      this.inlinePaymentOptions = {\n        ...this.data,\n        callback: response => {\n        this.data.callbackContext[this.data.callback.name](response)\n      } ,\n        onclose: () => {\n          try {\n            this.data.callbackContext[this.data.onclose.name]()\n          } catch (e) {\n\n          }\n\n        } ,\n\n      }\n    } else {\n\n      this.inlinePaymentOptions = {\n        callbackContext: null,\n        public_key: this.public_key,\n        tx_ref: this.tx_ref,\n        amount: this.amount,\n        currency: this.currency || 'NGN',\n        payment_options: this.payment_options || 'card, mobilemoney, ussd',\n        redirect_url: this.redirect_url || '',\n        meta: {...this.meta_defaults, ...this.meta},\n        customer: {...this.customer_defaults, ...this.customer},\n        callback: (response: PaymentSuccessResponse) => {\n          this.callback.emit(response)\n        },\n        onclose: () => this.close.emit(),\n        customizations: {...this.customizations_defaults\n          , ...this.customizations}\n      }\n      if (this.payment_plan) {\n        this.inlinePaymentOptions.payment_plan = this.payment_plan\n      }\n      if (this.subaccounts) {\n        this.inlinePaymentOptions.subaccounts = this.subaccounts\n      }\n      if (this.integrity_hash) {\n        this.inlinePaymentOptions.integrity_hash = this.integrity_hash\n      }\n    }\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {AsyncPaymentOptions, FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from './models';\n\n@Injectable()\nexport class Flutterwave {\n\n  constructor() { }\n\n  inlinePay(paymentData: InlinePaymentOptions) {\n\n    const data = {\n      ...paymentData,\n      callback: response => {\n        paymentData.callbackContext[paymentData.callback.name](response)\n      } ,\n      onclose: () => {\n        try {\n          paymentData.callbackContext[paymentData.onclose.name]()\n        } catch (e) {}\n      }\n    };\n\n    FlutterwaveCheckout(data);\n\n  }\n\n  asyncInlinePay(paymentData: AsyncPaymentOptions): Promise<PaymentSuccessResponse | 'closed'> {\n\n    return new Promise((resolve, reject) => {\n\n      paymentData = {\n        ...paymentData,\n        callback: ($event) => {\n          resolve($event)\n        } ,\n        onclose: () => resolve('closed')\n      };\n\n      FlutterwaveCheckout(paymentData)\n\n    })\n\n  }\n\n\n  /**\n   *\n   * @param waitDuration {Number} Seconds before closing payment modal\n   */\n  closePaymentModal(waitDuration: number = 0) {\n    setTimeout(() => {\n      document.getElementsByName('checkout')[0].setAttribute('style',\n        'position:fixed;top:0;left:0;z-index:-1;border:none;opacity:0;pointer-events:none;width:100%;height:100%;');\n      document.body.style.overflow = '';\n     // document.getElementsByName('checkout')[0].setAttribute('style', 'z-index: -1; opacity: 0')\n    } , waitDuration * 1000 )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\nimport {Flutterwave} from './flutterwave.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [MakePaymentComponent] ,\n  providers: [Flutterwave],\n  exports: [MakePaymentComponent]\n})\nexport class FlutterwaveModule {\n  constructor() {\n\n      const inlineSdk = 'https://checkout.flutterwave.com/v3.js';\n      const script = document.createElement('script');\n      script.src = inlineSdk;\n      if (!document.querySelector(`[src=\"${inlineSdk}\"]`)) {\n        document.body.appendChild(script)\n      }\n\n\n  }\n}\n"],"names":["InlinePaymentOptions","AsyncPaymentOptions","PaymentSuccessResponse","MakePaymentComponent","this","callback","EventEmitter","close","customer_defaults","email","phone_number","name","meta_defaults","consumer_id","consumer_mac","customizations_defaults","title","description","logo","prototype","ngOnInit","makePayment","prepareForPayment","FlutterwaveCheckout","inlinePaymentOptions","_this","customer","meta","customizations","data","Object","assign","response","callbackContext","onclose","e","public_key","tx_ref","amount","currency","payment_options","redirect_url","emit","payment_plan","subaccounts","integrity_hash","decorators","type","Component","args","selector","template","styles","ctorParameters","propDecorators","Input","Output","text","style","className","Flutterwave","inlinePay","paymentData","asyncInlinePay","Promise","resolve","reject","$event","closePaymentModal","waitDuration","setTimeout","document","getElementsByName","setAttribute","body","overflow","Injectable","FlutterwaveModule","inlineSdk","script","createElement","src","querySelector","appendChild","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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"}
